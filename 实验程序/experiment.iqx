==============================================================================
定义刺激材料：
*label:类别标签
*stim：权威、低权威词语\男、女性别名字
feedback_wrong:在被试错误时的提示
==============================================================================
<item highpower_label>
 /1 = "权威"
</item>

<item lowpower_label>
 /1 = "低权威"
</item>

<item female_label>
 /1 = "女性"
</item>

<item male_label>
 /1 = "男性"
</item>

<item highpower_stim>
 /1 = "领导"
 /2 = "主席"
 /3 = "老板"
 /4 = "主管"
 /5 = "上司"
</item>

<item lowpower_stim>
 /1 = "雇员"
 /2 = "员工"
 /3 = "随从"
 /4 = "职工"
 /5 = "学徒"
</item>

<item female_stim>
 /1 = "雨婷"
 /2 = "秀英"
 /3 = "欣怡"
 /4 = "晓兰"
 /5 = "雅静"
</item>

<item male_stim>
 /1 = "浩然"
 /2 = "景辉"
 /3 = "弘文"
 /4 = "俊杰"
 /5 = "建华"
</item>

<item feedback_wrong>
 /1 = "×"
</item>
===================================================
defaults
===================================================
<defaults>
/ fontstyle = ("Arial", 3.5%)
/ screencolor = (0,0,0)
/ txbgcolor = (0,0,0)
/ txcolor = (255, 255, 255)
/ minimumversion = "4.0.0.0"
/ canvasaspectratio = (4, 3)
</defaults>
===================================================
定义计算反馈结果所需要的统计量及初始化：
sum_*:block中一开始就正确反应且RT<10000ms的trial的反应时总和
sqsum_*:block中正确反应时的平方和
n_*:block中运行的trial总数
n_correct:相容/不相容任务中正确trial总数
result:被试偏好的程度
===================================================
<values>
 / completed = 0
 / sum_xiangrong1 = 0 
 / sum_xiangrong2 = 0 
 / sum_buxiangrong1 = 0 
 / sum_buxiangrong2 = 0 
 / sqsum_xiangrong1 = 0
 / sqsum_xiangrong2 = 0
 / sqsum_buxiangrong1 = 0
 / sqsum_buxiangrong2 = 0
 / n_xiangrong1 = 0 
 / n_xiangrong2 = 0 
 / n_buxiangrong1 = 0 
 / n_buxiangrong2 = 0 
 / result = "未知"
 / n_correct = 0
</values>
===================================================
定义统计量的计算表达式：
m_*:正确反应的反应时均值
t:相容/不相容任务正确反应时均值差异t分数
correctpercent：相容/不相容任务的反应正确率
ss:相容/不相容任务的正确反应时的标准误
===================================================
<expressions>
/ m_xiangrong1 = values.sum_xiangrong1 / values.n_xiangrong1
/ m_xiangrong2 = values.sum_xiangrong2 / values.n_xiangrong2
/ m_buxiangrong1 = values.sum_buxiangrong1 / values.n_buxiangrong1
/ m_buxiangrong2 = values.sum_buxiangrong2 / values.n_buxiangrong2
/ sd_xiangrong1 = sqrt((values.sqsum_xiangrong1 - (values.n_xiangrong1 * (expressions.m_xiangrong1 * expressions.m_xiangrong1))) / (values.n_xiangrong1 - 1))
/ sd_xiangrong2 = sqrt((values.sqsum_xiangrong2 - (values.n_xiangrong2 * (expressions.m_xiangrong2 * expressions.m_xiangrong2))) / (values.n_xiangrong2 - 1))
/ sd_buxiangrong1 = sqrt((values.sqsum_buxiangrong1 - (values.n_buxiangrong1 * (expressions.m_buxiangrong1 * expressions.m_buxiangrong1))) / (values.n_buxiangrong1 - 1))
/ sd_buxiangrong2 = sqrt((values.sqsum_buxiangrong2 - (values.n_buxiangrong2 * (expressions.m_buxiangrong2 * expressions.m_buxiangrong2))) / (values.n_buxiangrong2 - 1))
/ sd_xiangrong = sqrt((((values.n_xiangrong1 - 1) * (expressions.sd_xiangrong1 * expressions.sd_xiangrong1) + (values.n_xiangrong2 - 1) * (expressions.sd_xiangrong2 * expressions.sd_xiangrong2)) 
					+ ((values.n_xiangrong1 + values.n_xiangrong2) * ((expressions.m_xiangrong1 - expressions.m_xiangrong2) * (expressions.m_xiangrong1 - expressions.m_xiangrong2)) / 4) ) / (values.n_xiangrong1 + values.n_xiangrong2 - 1) )
/ sd_buxiangrong = sqrt((((values.n_buxiangrong1 - 1) * (expressions.sd_buxiangrong1 * expressions.sd_buxiangrong1) + (values.n_buxiangrong2 - 1) * (expressions.sd_buxiangrong2 * expressions.sd_buxiangrong2))
					+ ((values.n_buxiangrong1 + values.n_buxiangrong2) * ((expressions.m_buxiangrong1 - expressions.m_buxiangrong2) * (expressions.m_buxiangrong1 - expressions.m_buxiangrong2)) / 4) ) / (values.n_buxiangrong1 + values.n_buxiangrong2 - 1) )
/ d_xiangrong = (m_xiangrong1 - m_xiangrong2) / expressions.sd_xiangrong
/ d_buxiangrong = (m_buxiangrong1 - m_buxiangrong2) / expressions.sd_buxiangrong
/ d = (expressions.d_xiangrong + expressions.d_buxiangrong) / 2
/ preferred = "未知"
/ notpreferred = "未知"
/ correctpercent = (values.n_correct/ (values.n_xiangrong1 + values.n_buxiangrong1 + values.n_xiangrong2 + values.n_buxiangrong2)) * 100
</expressions>

===================================================
定义指导语
===================================================
<item introductions>
 /1 = "您好，欢迎参加我们的实验！请将左手放在键盘的F键上，右手放在键盘的J键上。接下来，屏幕中央会出现一些名字，有的代表男性，有的代表女性。屏幕左侧和右侧会出现性别的类别。
       请通过按键为名字选择相应的类别，其中，F键表示左侧的类别，J键表示右侧的类别，如果按错，请马上按另一个键作出正确反应。请尽量快速地做出选择。"
 /2 = "接下来，我们将重复之前的操作，但是在这次实验中，屏幕中央的词语类别将会改变成职称。这些职称有的代表高权威，有的代表低权威。请继续通过F和J键对词语类别进行匹配。"
 /3 = "接下来，我们的实验将做出一些改变。四个类别的词将交替出现。同时，屏幕两侧会有词语的类别，请通过F和J键选择词语所对应的类别在左侧或是右侧。"
 /4 = "接下来，我们将重复之前的实验，请尽快准确作答。"
 /5 = "接下来，实验中不同类别的位置将做出一些改变。请通过F和J键选择词语所对应的类别在左侧或是右侧。"
 /6 = "接下来，我们将重复之前的实验，请尽快准确作答。"
 /7 = "接下来，实验中不同类别的位置将做出一些改变。请通过F和J键选择词语所对应的类别在左侧或是右侧。"
 /8 = "接下来，我们将重复之前的实验，请尽快准确作答。"
 /9 = "接下来，实验中不同类别的位置将做出一些改变。请通过F和J键选择词语所对应的类别在左侧或是右侧。"
 /10 = "接下来，我们将重复之前的实验，请尽快准确作答。"
</item>

<text introductions>
/ items = introductions
/ hjustify = left
/ size = (90%, 60%)
/ position = (50%, 85%)
/ valign = bottom
/ select = sequence
/ resetinterval = 20
</text>

<text space_begin>
/ items = ("请按空格开始")
/ position = (50%, 95%)
/ valign = bottom
</text>

<trial introductions>
/ stimulustimes = [1=introductions, space_begin]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>
===================================================
text部分
===================================================
<text female>
 / items = female_stim
 / fontstyle = ("Lantinghei SC", 5%)
 / txcolor = white
</text>

<text male>
 / items = male_stim
 / fontstyle = ("Lantinghei SC", 5%)
 / txcolor = white
</text>

<text highpower>
 / items = highpower_stim
 / fontstyle = ("Lantinghei SC", 5%)
 / txcolor = green
</text>

<text lowpower>
 / items = lowpower_stim
 / fontstyle = ("Lantinghei SC", 5%)
 / txcolor = green
</text>

<text error>
/ position = (50%, 75%)
/ items = ("X")
/ color = (255, 0, 0)
/ fontstyle = ("Arial", 10%, true)
</text>

<text femalelabel_right>
/ items = female_label
/ valign = top
/ halign = right
/ position = (95%, 40%)
/ txcolor = white
/ fontstyle = ("Lantinghei SC", 5%)
</text>

<text femalelabel_left>
/ items = female_label
/ valign = top
/ halign = right
/ position = (5%, 40%)
/ txcolor = white
/ fontstyle = ("Lantinghei SC", 5%)
</text>

<text malelabel_right>
/ items = male_label
/ valign = top
/ halign = right
/ position = (95%, 40%)
/ txcolor = (255,255,255)
/ fontstyle = ("Lantinghei SC", 5%)
</text>

<text malelabel_left>
/ items = male_label
/ valign = top
/ halign = right
/ position = (5%, 40%)
/ txcolor = white
/ fontstyle = ("Lantinghei SC", 5%)
</text>

<text highpower_right>
/ items = highpower_label
/ valign = top
/ halign = right
/ position = (95%, 60%)
/ txcolor = green
/ fontstyle = ("Lantinghei SC", 5%)
</text>

<text highpower_left>
/ items = highpower_label
/ valign = top
/ halign = right
/ position = (5%, 60%)
/ txcolor = green
/ fontstyle = ("Lantinghei SC", 5%)
</text>

<text lowpower_right>
/ items = lowpower_label
/ valign = top
/ halign = right
/ position = (95%, 60%)
/ txcolor = green
/ fontstyle = ("Lantinghei SC", 5%)
</text>

<text lowpower_left>
/ items = lowpower_label
/ valign = top
/ halign = right
/ position = (5%, 60%)
/ txcolor = green
/ fontstyle = ("Lantinghei SC", 5%)
</text>

===================================================
trials
===================================================

<trial female_left>
/ validresponse = ("F", "J")
/ correctresponse = ("F")
/ stimulusframes = [1 = female]
/ posttrialpause = 250
</trial>

<trial female_right>
/ validresponse = ("F", "J")
/ correctresponse = ("J")
/ stimulusframes = [1 = female]
/ posttrialpause = 250
</trial>

<trial male_left>
/ validresponse = ("F", "J")
/ correctresponse = ("F")
/ stimulusframes = [1 = male]
/ posttrialpause = 250
</trial>

<trial male_right>
/ validresponse = ("F", "J")
/ correctresponse = ("J")
/ stimulusframes = [1 = male]
/ posttrialpause = 250
</trial>

<trial highpower_left>
/ validresponse = ("F", "J")
/ correctresponse = ("F")
/ stimulusframes = [1 = highpower]
/ posttrialpause = 250
</trial>

<trial highpower_right>
/ validresponse = ("F", "J")
/ correctresponse = ("J")
/ stimulusframes = [1 = highpower]
/ posttrialpause = 250
</trial>

<trial lowpower_left>
/ validresponse = ("F", "J")
/ correctresponse = ("F")
/ stimulusframes = [1 = lowpower]
/ posttrialpause = 250
</trial>

<trial lowpower_right>
/ validresponse = ("F", "J")
/ correctresponse = ("J")
/ stimulusframes = [1 = lowpower]
/ posttrialpause = 250
</trial>

=====================================================
summary：给参与者的反馈
=====================================================
<text summary>
/ items = ("你内隐联想测验的得分为 <% expressions.d %>, 这意味着你有 <% values.result %> 的倾向认为 <% expressions.preferred %> 相比于 <% expressions.notpreferred %>与权威角色有更强的联系。~n~n~n请按空格键退出本次实验。") 
/ size = (60%, 60%)
/ hjustify = left
 </text>


<trial summary>
/ stimulustimes = [0=summary]
/ validresponse = (" ")
/ recorddata = false
/ ontrialbegin = [values.result = "未知"]
/ ontrialbegin = [if( abs(expressions.d) > 0.15 ) values.result = "一点"]
/ ontrialbegin = [if( abs(expressions.d) > 0.35 ) values.result = "中等"]
/ ontrialbegin = [if( abs(expressions.d) >= 0.65 ) values.result = "强烈"]
/ ontrialbegin = [if(expressions.d >= 0.0) expressions.preferred = item.male_label]
/ ontrialbegin = [if(expressions.d < 0.0) expressions.preferred = item.female_label]
/ ontrialbegin = [if(expressions.d < 0.0) expressions.notpreferred= item.male_label]
/ ontrialbegin = [if(expressions.d >= 0.0) expressions.notpreferred= item.female_label]
</trial>

===================================================
blocks
===================================================

<block female_male_practice>
/ bgstim = (femalelabel_left, malelabel_right)
/ trials = [1=introductions;2-21 = random(female_left,male_right)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block male_female_practice>
/ bgstim = (malelabel_left, femalelabel_right)
/ trials = [1=introductions;2-21 = random(male_left,female_right)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block high_low_practice>
/ bgstim = (highpower_left, lowpower_right)
/ trials = [1=introductions;2-21 = random(highpower_left,lowpower_right)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block low_high_practice>
/ bgstim = (lowpower_left, highpower_right)
/ trials = [1=introductions;2-21 = random(lowpower_left,highpower_right)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block xiangrong1_practice>
/ bgstim = (femalelabel_left, malelabel_right, lowpower_left, highpower_right)
/ trials = [1=introductions;
  3,5,7,9,11 = random(female_left, male_right);
  2,4,6,8,10 = random(lowpower_left, highpower_right)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block xiangrong2_practice>
/ bgstim = (malelabel_left, femalelabel_right, highpower_left, lowpower_right)
/ trials = [1=introductions;
  3,5,7,9,11= random(male_left, female_right);
  2,4,6,8,10= random(highpower_left, lowpower_right)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block buxiangrong1_practice>
/ bgstim = (femalelabel_left, malelabel_right, highpower_left, lowpower_right)
/ trials = [1=introductions;
  3,5,7,9,11= random(female_left, male_right);
  2,4,6,8,10 = random(highpower_left, lowpower_right)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block buxiangrong2_practice>
/ bgstim = (malelabel_left, femalelabel_right, lowpower_left, highpower_right)
/ trials = [1=introductions;
  3,5,7,9,11= random(male_left, female_right);
  2,4,6,8,10 = random(lowpower_left, highpower_right)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block xiangrong1_intro>
/ bgstim = (femalelabel_left, malelabel_right, lowpower_left, highpower_right)
/ trials = [1=introductions]
/ recorddata = false
</block>

<block xiangrong2_intro>
/ bgstim = (malelabel_left, femalelabel_right, highpower_left, lowpower_right)
/ trials = [1=introductions]
/ recorddata = false
</block>

<block buxiangrong1_intro>
/ bgstim = (femalelabel_left, malelabel_right, highpower_left, lowpower_right)
/ trials = [1=introductions]
/ recorddata = false
</block>

<block buxiangrong2_intro>
/ bgstim = (malelabel_left, femalelabel_right, lowpower_left, highpower_right)
/ trials = [1=introductions]
/ recorddata = false
</block>

<block xiangrong1_test>
/ bgstim = (femalelabel_left, malelabel_right, lowpower_left, highpower_right)
/ trials = [
  1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39 = random(female_left, male_right);
  2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40 = random(lowpower_left, highpower_right)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.xiangrong1_test.latency  <= 10000) values.sum_xiangrong1 =  values.sum_xiangrong1 + block.xiangrong1_test.latency]
/ ontrialend = [if(block.xiangrong1_test.latency  <= 10000) values.n_xiangrong1 +=  1]
/ ontrialend = [if(block.xiangrong1_test.latency  <= 10000) values.sqsum_xiangrong1 =  values.sqsum_xiangrong1 + (block.xiangrong1_test.latency * block.xiangrong1_test.latency)]
/ ontrialend = [if(block.xiangrong1_test.latency  <= 10000) values.n_correct += block.xiangrong1_test.correct]
</block>

<block xiangrong2_test>
/ bgstim = (malelabel_left, femalelabel_right, highpower_left, lowpower_right)
/ trials = [
  1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39 = random(male_left, female_right);
  2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40 = random(highpower_left, lowpower_right)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.xiangrong2_test.latency  <= 10000) values.sum_xiangrong2 =  values.sum_xiangrong2 + block.xiangrong2_test.latency]
/ ontrialend = [if(block.xiangrong2_test.latency  <= 10000) values.n_xiangrong2 +=  1]
/ ontrialend = [if(block.xiangrong2_test.latency  <= 10000) values.sqsum_xiangrong2 =  values.sqsum_xiangrong2 + (block.xiangrong2_test.latency * block.xiangrong2_test.latency)]
/ ontrialend = [if(block.xiangrong2_test.latency  <= 10000) values.n_correct += block.xiangrong2_test.correct]
</block>

<block buxiangrong1_test>
/ bgstim = (femalelabel_left, malelabel_right, highpower_left, lowpower_right)
/ trials = [
  1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39 = random(female_left, male_right);
  2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40 = random(highpower_left, lowpower_right)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.buxiangrong1_test.latency  <= 10000) values.sum_buxiangrong1 =  values.sum_buxiangrong1 + block.buxiangrong1_test.latency]
/ ontrialend = [if(block.buxiangrong1_test.latency  <= 10000) values.n_buxiangrong1 +=  1]
/ ontrialend = [if(block.buxiangrong1_test.latency  <= 10000) values.sqsum_buxiangrong1 =  values.sqsum_buxiangrong1 + (block.buxiangrong1_test.latency * block.buxiangrong1_test.latency)]
/ ontrialend = [if(block.buxiangrong1_test.latency  <= 10000) values.n_correct += block.buxiangrong1_test.correct]
</block>

<block buxiangrong2_test>
/ bgstim = (malelabel_left, femalelabel_right, lowpower_left, highpower_right)
/ trials = [
  1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39 = random(male_left, female_right);
  2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40 = random(lowpower_left, highpower_right)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.buxiangrong2_test.latency  <= 10000) values.sum_buxiangrong2 =  values.sum_buxiangrong2 + block.buxiangrong2_test.latency]
/ ontrialend = [if(block.buxiangrong2_test.latency  <= 10000) values.n_buxiangrong2 +=  1]
/ ontrialend = [if(block.buxiangrong2_test.latency  <= 10000) values.sqsum_buxiangrong2 =  values.sqsum_buxiangrong2 + (block.buxiangrong2_test.latency * block.buxiangrong2_test.latency)]
/ ontrialend = [if(block.buxiangrong2_test.latency  <= 10000) values.n_correct += block.buxiangrong2_test.correct]
</block>

<block summary>
/ trials = [1=summary]
/ recorddata = false
</block>
===================================================
experiments
===================================================
<expt >
/subjects = (1 of 4)
/ groupassignment = groupnumber
/ blocks = [1=female_male_practice; 2=high_low_practice; 
			3=xiangrong1_practice; 4=xiangrong1_intro; 5=xiangrong1_test; 6=xiangrong2_practice; 7=xiangrong2_intro; 8=xiangrong2_test; 
			9=buxiangrong1_practice; 10=buxiangrong1_intro; 11=buxiangrong1_test; 12=buxiangrong2_practice; 13=buxiangrong2_intro; 14=buxiangrong2_test; 
				15=summary]
/onexptend = [values.completed = 1]
</expt>

<expt >
/subjects = (2 of 4)
/ groupassignment = groupnumber
/ blocks = [1=male_female_practice; 2=high_low_practice; 
			3=buxiangrong1_practice; 4=buxiangrong1_intro; 5=buxiangrong1_test; 6=buxiangrong2_practice; 7=buxiangrong2_intro; 8=buxiangrong2_test; 
			9=xiangrong1_practice; 10=xiangrong1_intro; 11=xiangrong1_test; 12=xiangrong2_practice; 13=xiangrong2_intro; 14=xiangrong2_test; 
				15=summary]
/onexptend = [values.completed = 1]
</expt>

<expt >
/subjects = (3 of 4)
/ groupassignment = groupnumber
/ blocks = [1=male_female_practice; 2=high_low_practice; 
			3=xiangrong1_practice; 4=xiangrong1_intro; 5=xiangrong1_test; 6=xiangrong2_practice; 7=xiangrong2_intro; 8=xiangrong2_test; 
			9=buxiangrong1_practice; 10=buxiangrong1_intro; 11=buxiangrong1_test; 12=buxiangrong2_practice; 13=buxiangrong2_intro; 14=buxiangrong2_test; 
				15=summary]
/onexptend = [values.completed = 1]
</expt>

<expt >
/subjects = (4 of 4)
/ groupassignment = groupnumber
/ blocks = [1=female_male_practice; 2=high_low_practice; 
			3=buxiangrong1_practice; 4=buxiangrong1_intro; 5=buxiangrong1_test; 6=buxiangrong2_practice; 7=buxiangrong2_intro; 8=buxiangrong2_test; 
			9=xiangrong1_practice; 10=xiangrong1_intro; 11=xiangrong1_test; 12=xiangrong2_practice; 13=xiangrong2_intro; 14=xiangrong2_test; 
				15=summary]
/onexptend = [values.completed = 1]
</expt>

***********************************************************************
Test Monkey
***********************************************************************
<monkey>
/ latencydistribution = normal(500, 100)
/ percentcorrect = 90
</monkey>